#include <bits/stdc++.h>
using namespace std;
#define forn(i, n) for(int (i) = 0; (i) < (n); (i)++)

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0), cout.tie(0);

	int n, ans = -1, res = -1;
	cin >> n;
	vector<int> a(n);
	vector<pair<int, int>> p;
	smap<int, int> mp, dir;
	forn(i, n) cin >> a[i];
	forn(i, n){
		mp[a[i]] ++;
		if(mp[a[i]] == 2){
			mp[a[i]] = 1;
			p.push_back({dir[a[i]], i + 1});
		}
		dir[a[i]] = i + 1;
	}
	if(size(p) == 0){
		cout << -1;
		return 0;
	}
	std::vector<pair<int, int>> pp;
	pp.push_back({p[0].first, p[0].second});
	for(int i = 1; i < size(p); i ++){
		if(p[i].first > pp.back().second){
			pp.push_back({p[i].first, p[i].second});
		}
	}
	int prev = 0;
	cout << size(pp) << '\n';
	if(size(pp) == 1){
		cout << 1 << ' ' << n;
		return 0;
	}
	forn(i, size(pp)){
		if(i == 0){
			cout << min(1, pp[i].first) << ' ' << pp[i].second << '\n';
			prev = pp[i].second + 1;
		}else if(i < size(pp) - 1){
			cout << min(prev, pp[i].first) << ' ' << pp[i].second << '\n';
			prev = pp[i].second + 1;
		}else{
			cout << min(prev, pp[i].first) << ' ' << max(n, pp[i].second) << '\n';
		}
	}
	//cout << '\n'; forn(i, size(p)) cout << p[i].first << ' ' << p[i].second << '\n';
}
